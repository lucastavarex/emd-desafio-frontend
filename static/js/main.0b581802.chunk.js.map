{"version":3,"sources":["App.js","serviceWorker.js","config.js","index.js"],"names":["layerTypes","alignments","Chapter","_ref","id","theme","title","image","description","classList","currentChapterID","React","createElement","className","concat","src","alt","App","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleScroll","window","innerHeight","scrollY","document","body","offsetHeight","scrollTo","top","behavior","state","currentChapter","chapters","_createClass","key","value","config","this","mapStart","location","mapboxgl","accessToken","map","Map","container","mapContainer","style","center","zoom","pitch","bearing","modelRotate","Math","PI","modelAsMercatorCoordinate","MercatorCoordinate","fromLngLat","modelTransform","translateX","x","translateY","y","translateZ","z","rotateX","rotateY","rotateZ","scale","meterInMercatorCoordinateUnits","customLayer","type","renderingMode","onAdd","gl","_this2","camera","THREE","scene","directionalLight","position","set","normalize","add","directionalLight2","GLTFLoader","load","gltf","renderer","canvas","getCanvas","context","antialias","autoClear","render","matrix","rotationX","makeRotationAxis","rotationY","rotationZ","m","fromArray","l","makeTranslation","multiply","projectionMatrix","resetState","triggerRepaint","on","addLayer","marker","Marker","setLayerOpacity","layer","layerType","getLayer","getLayerPaintType","forEach","prop","setPaintProperty","opacity","showMarkers","setLngLat","addTo","setState","bind","scroller","scrollama","setup","step","offset","progress","onStepEnter","response","chapter","find","chap","element","flyOptions","duration","easing","t","flyTo","onStepExit","onChapterExit","length","addEventListener","resize","removeEventListener","_this3","ref","el","subtitle","byline","alignment","Object","assign","Component","Boolean","hostname","match","onChapterEnter","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b581802.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport scrollama from 'scrollama';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\n//Aqui defini um objeto layerTypes \n//que mapeia os tipos de camadas do Mapbox GL JS \n//para as propriedades de opacidade correspondentes.\nconst layerTypes = {\n    'fill': ['fill-opacity'],\n    'line': ['line-opacity'],\n    'circle': ['circle-opacity', 'circle-stroke-opacity'],\n    'symbol': ['icon-opacity', 'text-opacity'],\n    'raster': ['raster-opacity'],\n    'fill-extrusion': ['fill-extrusion-opacity']\n}\n\n//Esse objeto alignments mapeia as opções de alinhamento\n// para classes CSS correspondentes.\nconst alignments = {\n    'left': 'lefty',\n    'center': 'centered',\n    'right': 'righty'\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentChapter: props.chapters[0]\n        };\n    }\n\n    componentDidMount() {\n        const config = this.props;\n        const mapStart = config.chapters[0].location;\n\n        mapboxgl.accessToken = config.accessToken;\n\n        const map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: config.style,\n            center: mapStart.center,\n            zoom: mapStart.zoom,\n            pitch: mapStart.pitch,\n            bearing: mapStart.bearing,\n\n        });\n\n        //parâmetros para garantir que o modelo seja georreferenciado corretamente no mapa\n        const modelOrigin = [-43.21048, -22.95181];\n        const modelAltitude = 0;\n        const modelRotate = [Math.PI / 2, 0, 0];\n\n        const modelAsMercatorCoordinate = mapboxgl.MercatorCoordinate.fromLngLat(\n            modelOrigin,\n            modelAltitude\n        );\n\n        //parâmetros de transformação para posicionar, girar e dimensionar o modelo 3D no mapa\n        const modelTransform = {\n            translateX: modelAsMercatorCoordinate.x,\n            translateY: modelAsMercatorCoordinate.y,\n            translateZ: modelAsMercatorCoordinate.z,\n            rotateX: modelRotate[0],\n            rotateY: modelRotate[1],\n            rotateZ: modelRotate[2],\n            scale: modelAsMercatorCoordinate.meterInMercatorCoordinateUnits()\n            /* Since the 3D model is in real world meters, a scale transform needs to be\n             * applied since the CustomLayerInterface expects units in MercatorCoordinates.\n             */\n        };\n\n\n        // configuration of the custom layer for a 3D model per the CustomLayerInterface\n        const customLayer = {\n            id: '3d-model',\n            type: 'custom',\n            renderingMode: '3d',\n            onAdd: function (map, gl) {\n                this.camera = new THREE.Camera();\n                this.scene = new THREE.Scene();\n\n                // create two three.js lights to illuminate the model\n                const directionalLight = new THREE.DirectionalLight(0xffffff, 1.5);\n                directionalLight.position.set(-100, -70, 100).normalize();\n                this.scene.add(directionalLight);\n\n                const directionalLight2 = new THREE.DirectionalLight(0xffffff, 1.5);\n                directionalLight2.position.set(100, 70, 100).normalize();\n                this.scene.add(directionalLight2);\n\n                // use the three.js GLTF loader to add the 3D model to the three.js scene\n                const loader = new GLTFLoader();\n                loader.load(\n                    'cristo.gltf',\n                    (gltf) => {\n                        this.scene.add(gltf.scene);\n                    }\n                );\n                this.map = map;\n\n                // use the Mapbox GL JS map canvas for three.js\n                this.renderer = new THREE.WebGLRenderer({\n                    canvas: map.getCanvas(),\n                    context: gl,\n                    antialias: true\n                });\n\n                this.renderer.autoClear = false;\n            },\n            render: function (gl, matrix) {\n                const rotationX = new THREE.Matrix4().makeRotationAxis(\n                    new THREE.Vector3(1, 0, 0),\n                    modelTransform.rotateX\n                );\n                const rotationY = new THREE.Matrix4().makeRotationAxis(\n                    new THREE.Vector3(0, 1, 0),\n                    modelTransform.rotateY\n                );\n                const rotationZ = new THREE.Matrix4().makeRotationAxis(\n                    new THREE.Vector3(0, 0, 1),\n                    modelTransform.rotateZ\n                );\n\n                const m = new THREE.Matrix4().fromArray(matrix);\n                const l = new THREE.Matrix4()\n                    .makeTranslation(\n                        modelTransform.translateX,\n                        modelTransform.translateY,\n                        modelTransform.translateZ\n                    )\n                    .scale(\n                        new THREE.Vector3(\n                            modelTransform.scale,\n                            -modelTransform.scale,\n                            modelTransform.scale\n                        )\n                    )\n                    .multiply(rotationX)\n                    .multiply(rotationY)\n                    .multiply(rotationZ);\n\n                this.camera.projectionMatrix = m.multiply(l);\n                this.renderer.resetState();\n                this.renderer.render(this.scene, this.camera);\n                this.map.triggerRepaint();\n            }\n        };\n        map.on('style.load', () => {\n            map.addLayer(customLayer, 'waterway-label');\n        });\n\n        const marker = new mapboxgl.Marker();\n        if (config.showMarkers) {\n            marker.setLngLat(mapStart.center).addTo(map);\n        }\n\n        function getLayerPaintType(layer) {\n            var layerType = map.getLayer(layer).type;\n            return layerTypes[layerType];\n        }\n\n        function setLayerOpacity(layer) {\n            var paintProps = getLayerPaintType(layer.layer);\n            paintProps.forEach(function (prop) {\n                map.setPaintProperty(layer.layer, prop, layer.opacity);\n            });\n        }\n\n        const setState = this.setState.bind(this);\n\n        // instancia do scrollama\n        const scroller = scrollama();\n\n        map.on('load', function () {\n\n            // setup the instance, pass callback functions\n            scroller\n                .setup({\n                    step: '.step',\n                    offset: 0,\n                    progress: true\n                })\n                .onStepEnter(response => {\n                    const chapter = config.chapters.find(chap => chap.id === response.element.id);\n                    setState({ currentChapter: chapter });\n\n                    // Define as opções de animação\n                    const flyOptions = {\n                        center: chapter.location.center,\n                        zoom: chapter.location.zoom,\n                        bearing: chapter.location.bearing,\n                        pitch: chapter.location.pitch,\n                        duration: 2000, // Duração da animação em milissegundos (aqui definimos 2 segundos)\n                        easing: t => t, // Curva de aceleração linear (pode ser alterada para outras curvas)\n                    };\n                    // Executa a animação com as opções definidas\n                    map.flyTo(flyOptions);\n\n                })\n                .onStepExit(response => {\n                    var chapter = config.chapters.find(chap => chap.id === response.element.id);\n                    if (chapter.onChapterExit.length > 0) {\n                        chapter.onChapterExit.forEach(setLayerOpacity);\n                    }\n                });\n        });\n\n        window.addEventListener('resize', scroller.resize);\n\n        // Adiciona o event listener para o scroll\n        window.addEventListener('scroll', this.handleScroll);\n    }\n\n    componentWillUnmount() {\n        // Remove o event listener quando o componente é desmontado para evitar memory leaks\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    handleScroll = () => {\n        // Verifica se o usuário chegou ao final da página\n        if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n            // Se sim, rola a página para o topo\n            window.scrollTo({ top: 0, behavior: 'smooth' }); \n        }\n    }\n\n    render() {\n        const config = this.props;\n        const theme = config.theme;\n        const currentChapterID = this.state.currentChapter.id;\n        return (\n            <div>\n                <div ref={el => this.mapContainer = el} className=\"absolute top right left bottom\" />\n                <div id=\"story\">\n                    {config.title &&\n                        <div id=\"header\" >\n                            <h1>\n                                <div className=\"logo-container\">\n                                    {config.image && <img src={config.image} alt=\"Imagem do título\" className=\"logo\" />} {/* Adicionando a imagem */}\n                                    {config.title}\n                                </div>\n                            </h1>\n                            {config.subtitle &&\n                                <h2>{config.subtitle}</h2>\n                            }\n                            {config.byline &&\n                                <p>{config.byline}</p>\n                            }\n                        </div>\n                    }\n                    <div id=\"features\" className={alignments[config.alignment]}>\n                        {\n                            config.chapters.map(chapter =>\n                                <Chapter key={chapter.id} theme={theme} {...chapter} currentChapterID={currentChapterID} />\n                            )\n                        }\n                    </div>\n                 \n                </div>\n            </div>\n        );\n    }\n\n}\n\nfunction Chapter({ id, theme, title, image, description, currentChapterID }) {\n    const classList = id === currentChapterID ? \"step active\" : \"step\";\n\n    return (\n        <div id={id} className={`${classList}`}>\n            <div className={id === \"corcovado\" ? \"\" : theme}>\n                {title && <h3 className=\"title\">{title}</h3>}\n                {image && <img src={image} alt={title} />}\n                {description && <p>{description}</p>}\n            </div>\n        </div>\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var config = {\n    style: 'mapbox://styles/mapbox/satellite-streets-v12',\n    accessToken: 'pk.eyJ1IjoibHVjYXN0YXZhcmV4MiIsImEiOiJjbGprZXZ6bm4waDhpM2RvM2FsMGR3eHFqIn0.-_dpyqkDcZDiNfrmbxVF7Q',\n    showMarkers: false,\n    theme: 'light',\n    alignment: 'left',\n    title:'O Cristo Redentor',\n    image:'assets/logo-prefeitura.png',\n    chapters: [\n        {\n            id:'corcovado',\n            title: '',\n            location: {\n                center: [-43.21048, -22.95181],\n                zoom: 17.50,\n                pitch: 75.00,\n                bearing: -90\n            },\n            onChapterEnter: [\n            ],\n            onChapterExit: [\n            ]\n        },\n        {\n            id: 'cabeca',\n            title: 'Curiosidades sobre a cabeça',\n            image: 'assets/cabeca.jpg',\n            description: `A cabeça do Cristo Redentor tem 3,75 metros de altura e é feita de concreto armado revestido com pedra-sabão, um tipo de rocha comum no Brasil.\n            Dentro da cabeça, há uma escada em caracol com 12 degraus que leva ao interior da estátua, onde os visitantes podem encontrar um pequeno mirante.\n            Do mirante na cabeça do Cristo Redentor, os visitantes têm uma vista panorâmica espetacular da cidade do Rio de Janeiro, incluindo a Baía de Guanabara, a Floresta da Tijuca e as praias de Copacabana e Ipanema.\n            `,\n            location: {\n                center: [-43.21075, -22.95181],\n                zoom: 19.80,\n                pitch: 55,\n                bearing: -90\n            },\n            onChapterEnter: [\n            ],\n            onChapterExit: [\n            ]\n        },\n        {\n            id: 'bracos',\n            title: 'Curiosidades sobre os braços',\n            image: 'assets/bracos.jpg',\n            description: `Os braços do Cristo Redentor têm uma envergadura impressionante de 28 metros cada, criando uma sensação de abraço simbólico sobre a cidade.\n            Os braços da estátua foram projetados para representar a mensagem de acolhimento e proteção do Cristo Redentor, simbolizando o amor e a paz que ele oferece ao Rio de Janeiro e ao mundo.\n            Os braços do Cristo Redentor foram construídos separadamente e fixados ao corpo da estátua durante a montagem.`,\n            location: {\n                center: [-43.21065, -22.95190],\n                zoom: 19.50,\n                pitch: 62.00,\n                bearing: -99\n            },\n            onChapterEnter: [],\n            onChapterExit: []\n        },\n        {\n            id: 'tronco',\n            title: 'Curiosidades sobre o tronco',\n            image: 'assets/tronco.jpg',\n            description: `O tronco do Cristo Redentor tem 30 metros de altura e é constituído por uma estrutura de concreto armado revestida com placas de pedra-sabão.\n            Dentro do tronco, há um elevador que leva os visitantes à plataforma de observação no peito da estátua, a cerca de 38 metros de altura.\n            O tronco do Cristo Redentor também abriga uma capela chamada Capela de Nossa Senhora Aparecida, onde missas e cerimônias religiosas são realizadas periodicamente.`,\n            location: {\n                center: [-43.21048, -22.95181],\n                zoom: 20.00,\n                pitch: 70.00,\n                bearing: -95\n            },\n            onChapterEnter: [],\n            onChapterExit: []\n        },\n        {\n            id: 'pernas',\n            title: 'Curiosidades sobre as pernas',\n            image: 'assets/pernas.jpg',\n            description: `As pernas do Cristo Redentor são compostas por uma estrutura de concreto armado coberta com placas de pedra-sabão, assim como o tronco.\n            A altura das pernas é de aproximadamente 11 metros, e cada pé tem cerca de 1,35 metros de comprimento.\n            O design das pernas do Cristo Redentor é emblemático, transmitindo a sensação de solidez e firmeza da estátua, como se estivesse enraizada na montanha do Corcovado.`,\n            location: {\n                center: [-43.21048, -22.95181],\n                zoom: 21.00,\n                pitch: 70.00,\n                bearing: -90\n            },\n            onChapterEnter: [],\n            onChapterExit: []\n        }\n    ]\n};\n\nexport default config;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport config from './config.js';\n\n\n\nReactDOM.render(<App {...config}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}